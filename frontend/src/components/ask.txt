hello  this  is  main  .jsx
import { StrictMode } from "react";
import { createRoot } from "react-dom/client";
import App from "./App.jsx";

createRoot(document.getElementById("root")).render(
  <StrictMode>
    <App />
  </StrictMode>
);



the  app.jsx
import Create from "./components/admin/Create";
import User from "./components/User";
import { useState } from "react";
import "./components/index.css";
function App() {
  const [view, setView] = useState("create");

  return (
    <div>
      {view === "create" && <Create />}
      {view === "record" && <User />}

      {/* Floating Buttons */}
      <div
        style={{
          position: "fixed",
          bottom: "10px",
          left: "50%",
          transform: "translateX(-50%)",
          background: "#1e1f26",
          padding: "0.5rem 1rem",
          borderRadius: "10px",
          boxShadow: "0 0 10px rgba(0,0,0,0.5)",
          zIndex: 9999,
        }}
      >
        <button
          onClick={() => setView("create")}
          style={{
            backgroundColor: view === "create" ? "#00cec9" : "#3b3c47",
            color: "#fff",
            border: "none",
            padding: "0.6rem 1rem",
            borderRadius: "6px",
            marginRight: "0.5rem",
            fontWeight: "bold",
            cursor: "pointer",
          }}
        >
          Admin View
        </button>
        <button
          onClick={() => setView("record")}
          style={{
            backgroundColor: view === "record" ? "#00cec9" : "#3b3c47",
            color: "#fff",
            border: "none",
            padding: "0.6rem 1rem",
            borderRadius: "6px",
            fontWeight: "bold",
            cursor: "pointer",
          }}
        >
          User View
        </button>
      </div>
    </div>
  );
}

export default App;
   its  css  file 
   /* Reset default browser styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}



the  create.jsx
import axios from "axios";
import { useState } from "react";
import SuccessCard from "../Card"; // adjust path if needed
import "./Dark.css";
const Create = () => {
  const [name, setname] = useState("");
  const [quantity, setQuantity] = useState("");
  const [Bprice, setBprice] = useState("");
  const [Sprice, setSprice] = useState("");
  const [error, setError] = useState("");
  const [showSuccess, setShowSuccess] = useState(false);
  const handleSubmit = (event) => {
    event.preventDefault();

    setError("");
    if (!name) {
      return setError("please provide product  name");
    }
    if (!quantity) {
      return setError("please provide product  quantiy");
    }
    if (!Bprice) {
      return setError("please provide product  buying price");
    }
    if (!Sprice) {
      return setError("please provide product  selling price");
    }

    if (isNaN(quantity)) {
      setError("Please provide a valid quantity");
    }
    if (isNaN(Bprice)) {
      return setError("Please provide a  buying price");
    }
    if (isNaN(Sprice)) {
      return setError("Please provide a valid selling price");
    }
    axios
      .post("http://localhost:5000/createProduct", {
        productName: name,
        productQuantity: Number(quantity),
        buyingPrice: Number(Bprice),
        sellingPrice: Number(Sprice),
      })
      .then(() => {
        setShowSuccess(true);
        setTimeout(() => setShowSuccess(false), 3000);
        setname("");
        setQuantity("");
        setBprice("");
        setSprice("");
        setError("");
      })
      .catch((err) => {
        setError("Failed to create product");
      });
  };

  return (
    <>
      <section>
        <form className="create" onSubmit={handleSubmit}>
          <div className="inputs">
            <h1>Create product</h1>
            {error && <div style={{ color: "red" }}>{error}</div>}
            <input
              type="text"
              placeholder="product name"
              value={name}
              onChange={(e) => setname(e.target.value)}
            />
            <input
              type="number"
              placeholder="quantity purchased  in KG"
              value={quantity}
              onChange={(e) => setQuantity(e.target.value)}
            />
            <input
              type="text"
              placeholder="Buying price per KG"
              value={Bprice}
              onChange={(e) => setBprice(e.target.value)}
            />
            <input
              type="text"
              placeholder="Selling price per KG"
              value={Sprice}
              onChange={(e) => setSprice(e.target.value)}
            />
            <button type="submit">Create product</button>
          </div>
        </form>
      </section>
      <SuccessCard message="Product created successfully!" show={showSuccess} />
    </>
  );
};

export default Create;

its  css file

/* Create.css */
section {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 2rem 1rem;
  min-height: 100vh;
  background-color: #20232a;
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  color: #f0f0f0;
}

.create-form {
  background-color: #2c2f36;
  padding: 2rem;
  border-radius: 12px;
  max-width: 800px;
  width: 100%;
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.6);
}

.inputs {
  display: flex;
  flex-direction: column;
  gap: 1.2rem;
}

.inputs h1 {
  text-align: center;
  font-size: 2rem;
  margin-bottom: 0.5rem;
  color: #ffffff;
}

.inputs input {
  padding: 1rem;
  border-radius: 8px;
  border: 1px solid #444;
  background-color: #3a3d46;
  color: #f0f0f0;
  font-size: 1.1rem;
  width: 100%;
  transition: border-color 0.3s ease, background-color 0.3s ease;
}

.inputs input::placeholder {
  color: #b0b0b0;
}

.inputs input:focus {
  border-color: #00cec9;
  background-color: #40424b;
  outline: none;
}

.inputs button {
  padding: 1rem;
  background-color: #00cec9;
  color: #1e1f26;
  font-weight: bold;
  border: none;
  border-radius: 8px;
  font-size: 1.1rem;
  width: 100%;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.inputs button:hover {
  background-color: #00b3ae;
}



the  user.jsx 
import { useState, useEffect } from "react";
import "./user.css";

const User = () => {
  const [value, setValue] = useState("");
  const [products, setProducts] = useState([
    { name: "", quantity: "", price: "" },
    { name: "", quantity: "", price: "" },
    { name: "", quantity: "", price: "" },
  ]);

  // Automatically add a new row when the last one is filled
  useEffect(() => {
    const last = products[products.length - 1];
    if (last.name && last.quantity && last.price) {
      setProducts([...products, { name: "", quantity: "", price: "" }]);
    }
  }, [products]);

  // Handles input change for name, quantity, price
  const handleChange = (index, field, value) => {
    const updated = [...products];
    updated[index][field] = value;
    setProducts(updated);
  };

  // On form submission
  const handleSubmit = (e) => {
    e.preventDefault();

    // Remove empty rows
    const validProducts = products.filter(
      (p) => p.name || p.quantity || p.price
    );

    console.log("Submitted:", validProducts);
    alert("Check your console to see submitted products!");
  };

  return (
    <div className="main">
      <form onSubmit={handleSubmit}>
        <input type="date" className="date" value={value} />
        <h2>Enter Products Sold</h2>

        {products.map((product, index) => (
          <div key={index} className="inputs">
            <input
              type="text"
              placeholder="Name"
              value={product.name}
              onChange={(e) => handleChange(index, "name", e.target.value)}
            />
            <input
              type="text"
              placeholder="Quantity"
              value={product.quantity}
              onChange={(e) => handleChange(index, "quantity", e.target.value)}
            />
            <input
              type="text"
              placeholder="Price"
              value={product.price}
              onChange={(e) => handleChange(index, "price", e.target.value)}
            />
          </div>
        ))}

        <button type="submit">Submit</button>
      </form>
    </div>
  );
};

export default User;
  its  css  file 
  /* User.css */
.main {
  display: flex;
  justify-content: center;
  padding: 2rem 1rem;
  background: #f5f6fa;
  min-height: 100vh;
  font-family: "Segoe UI", sans-serif;
}

form {
  background: #fff;
  padding: 2rem;
  border-radius: 10px;
  max-width: 600px;
  width: 100%;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  position: relative;
}

.date {
  position: absolute;
  top: 1rem;
  right: 1rem;
  padding: 0.5rem;
  font-size: 0.9rem;
}

h2 {
  text-align: center;
  margin-bottom: 1rem;
  font-size: 1.5rem;
}

/* Inputs in a single row */
.inputs {
  display: flex;
  gap: 0.5rem;
  margin-bottom: 1rem;
  flex-wrap: nowrap;
  align-items: center;
}

/* Each input stays compact */
.inputs input {
  padding: 0.6rem;
  border-radius: 6px;
  border: 1px solid #ccc;
  font-size: 0.95rem;
  width: 100%;
  max-width: 180px;
  flex: 1;
}

/* Submit button */
button[type="submit"] {
  width: 100%;
  padding: 0.75rem;
  background-color: #187982;
  color: #fff;
  font-weight: bold;
  border: none;
  border-radius: 8px;
  font-size: 1rem;
  cursor: pointer;
  transition: background-color 0.2s ease;
}

button[type="submit"]:hover {
  background-color: #14696f;
}
